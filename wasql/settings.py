"""
Django settings for wasql project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import csv

from routers.AuthRouter import AuthRouter as auth_router
from routers.PrimaryReplicaRouter import PrimaryReplicaRouter as primary_replica_router

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
STATICFILES_DIR = os.path.join(BASE_DIR, 'static')

#print('BASE DIR: ' + BASE_DIR)
#print('TEMPLATES DIR: ' + TEMPLATES_DIR)
#print('STATICFILES DIR: ' + STATICFILES_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'w20mu&!0^1v%@v38*5v3u32pu0%yoz_tbf6@^%9dj8($($xy+n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['tr-scdzm.pagekite.me', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'scauthapp',
    'workspace',
    'rating'
]

'''
    # тестовые модули
    'firstapp',
    'testurlapp',
    'teststaticapp',
    'validformapp',
    'authapp'
'''

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'wasql.urls'


# Определение папки для шаблонных файлов на уровне проекта
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'wasql.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

def read_csv_file(filepath, encoding='utf-8'):
    with open(filepath, 'rt', encoding=encoding) as src:
        rdr = csv.reader(src)
        for key, value in rdr:
            yield str(key), str(value) #yield - возвращает элемент последовательности в виде кортежа.

file_path = os.path.abspath("C:/PW/constants.txt")

#print('FILE PATH: ' + str(file_path))

def generator_to_dict(generator):
	#print('GENERATOR: ' + str(generator))
	my_dict = dict((x,y) for x,y in generator)
	return my_dict

my_dict = generator_to_dict(read_csv_file(file_path))

#my_dict.keys() # получить все ключи из словаря

# База данных поумолчанию
# 'ENGINE': 'django.db.backends.sqlite3',
# 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

DATABASES = {
        'default': {
        'NAME': 'auth_db',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'root',
        'PASSWORD': my_dict['password'],
        'HOST': '127.0.0.1',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
        'OPTIONS': {
          'autocommit': True,
        },
    },
    'auth_db': {
        'NAME': 'auth_db',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'root',
        'PASSWORD': my_dict['password'],
        'HOST': '127.0.0.1',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
        'OPTIONS': {
          'autocommit': True,
        },
    },
    'primary1': {
        'NAME': 'primary1',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'root',
        'PASSWORD': my_dict['password'],
        'HOST': '127.0.0.1',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
        'OPTIONS': {
          'autocommit': True,
        },
    },
    'replica1': {
        'NAME': 'replica1',
        'ENGINE': 'django.db.backends.mysql',
        'USER': 'root',
        'PASSWORD': my_dict['password'],
        'HOST': '127.0.0.1',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
        'OPTIONS': {
          'autocommit': True,
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'ru-Ru' # 'en-us'

TIME_ZONE = 'Europe/Moscow'# 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# Включаем поддержку заливки файлов на сервер
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Определение папки для статичных файлов на уровне проекта
STATICFILES_DIRS = [
    STATICFILES_DIR
]

#
LOGIN_REDIRECT_URL = '/'

# AUTH_ROUTER_PATH = (os.path.join(BASE_DIR, 'AuthRouter'),)
# print(AUTH_ROUTER_PATH)
# PRIMARY_REPLICA_ROUTER_PATH = (os.path.join(BASE_DIR, 'PrimaryReplicaRouter'),)
# print(PRIMARY_REPLICA_ROUTER_PATH)


#DATABASE_ROUTERS =['routers.AuthRouter.AuthRouter', 'routers.PrimaryReplicaRouter.PrimaryReplicaRouter']
